extends ./template.pug

block content
	.row
		.col-md-12
			.card
				.card-header
					h4.card-title Stalls
				.card-body
					.toolbar
						button.btn.btn-round.btn-success(data-toggle='modal' data-target='#addStallModal') + Add Stall
					br
					table#stallTable.table.table-bordered.table-striped(cellspacing='0')
						thead
							tr
								th Stall ID
								th Stall Type
								th Stall Status
								th Actions
						tbody
							each stall in stalls
								tr
									td #{stall.strId}
									td #{`${stall.booStallType == 0 ? 'Food Stall' : 'Dry Goods Stall'}`}
									if(stall.booIsAvailable == 0)
										td.text-success Available
										td
											a.btn.btn-round.btn-warning.btn-icon.edit(href='javascript:void(0)' stallType=`${stall.booStallType}` stallId=`${stall.strId}`)
												i.now-ui-icons.design_scissors
											a.btn.btn-round.btn-danger.btn-icon.remove(href='javascript:void(0)' stallType=`${stall.booStallType}` stallId=`${stall.strId}`)
												i.now-ui-icons.ui-1_simple-remove
									else
										td.text-danger Occupied
										td
											a.btn.btn-round.btn-warning.btn-icon(href='javascript:void(0)' stallType=`${stall.booStallType}` stallId=`${stall.strId}` disabled)
												i.now-ui-icons.design_scissors
											a.btn.btn-round.btn-danger.btn-icon(href='javascript:void(0)' stallType=`${stall.booStallType}` stallId=`${stall.strId}` disabled)
												i.now-ui-icons.ui-1_simple-remove
					br
					.row
						.col-md-12
							center
								h3 Stall Map
									br
									button#rect Add
									button#save Save
									input#text(type='text')
									br
									canvas#c(width='400', height='400')
									br
									p.save

								//- img(src='/assets/images/stall-map.jpg')
	#addStallModal.modal.fade(tabindex='-1', role='dialog', aria-hidden='true')
		.modal-dialog(role='document')
			.modal-content
				.modal-header
					h5.modal-title Add Stall
					button.close(type='button', data-dismiss='modal', aria-label='Close')
						span(aria-hidden='true') ×
				form#addStallForm(method='POST' action='/admin/addstall')
					.modal-body
							.form-group
								label Stall ID
									small.text-danger  *
								input.form-control(type='text' name='stallId' placeholder='Enter Stall ID')
							.form-group
								label Stall Type
									small.text-danger  *
								.form-check.form-check-radio
									label.form-check-label
										input.form-check-input(type='radio', name='stallType', value='0' checked)
										| Food Stall
										span.form-check-sign
								.form-check.form-check-radio
									label.form-check-label
										input.form-check-input(type='radio', name='stallType', value='1')
										| Dry Goods Stall
										span.form-check-sign
					.modal-footer
						button#addStallSave.btn.btn-primary(type='submit') Save
	#editStallModal.modal.fade(tabindex='-1', role='dialog', aria-hidden='true')
		.modal-dialog(role='document')
			.modal-content
				.modal-header
					h5.modal-title Edit Stall
					button.close(type='button', data-dismiss='modal', aria-label='Close')
						span(aria-hidden='true') ×
				form#editStallForm(method='POST' action='')
					.modal-body
							.form-group
								label Stall ID
									small.text-danger  *
								input#editStallStallId.form-control(type='text' name='stallId' placeholder='Enter Stall ID')
							.form-group
								label Stall Type
									small.text-danger  *
								.form-check.form-check-radio
									label.form-check-label
										input#editStallFood.form-check-input(type='radio', name='stallType', value='0')
										| Food Stall
										span.form-check-sign
								.form-check.form-check-radio
									label.form-check-label
										input#editStallDry.form-check-input(type='radio', name='stallType', value='1')
										| Dry Goods Stall
										span.form-check-sign
					.modal-footer
						button#editStallSave.btn.btn-primary(type='submit') Edit
block contentScript
	
	script.
		$(document).ready(function(){
			$('#stallTable').dataTable()
			$('input[name="stallId"]').mask('A-Z000',{
				translation:{
					'A':{
						pattern: /[A-Z]/
					},
					'0':{
						pattern: /[0-9]/
					},
					'Z':{
						pattern: /[1-9]/
					}
				}
			})
			$('#addStallForm').validate({
				rules:{
					stallId:{
						required: true,
						minlength: 3,
						remote: {
							url: '/admin/stall-id-check',
							type: 'POST',
							data: {
								stallId: function(){
									return $('#addStallForm input[name="stallId"]').val()
								}
							},
						}
					}
				},
				messages:{
					stallId:{
						remote: function(){
							return `Stall ${$('#addStallForm input[name="stallId"]').val()} already exists on the database`
						}
					}
				}
			})
			$(document).on('click', '.edit', function(){
				$('#editStallStallId').val($(this).attr('stallId'))
				if($(this).attr('stallType') == 0){
					$('#editStallFood').prop('checked',true)
				}
				else if($(this).attr('stallType') == 1){
					$('#editStallDry').prop('checked',true)
				}
				$('#editStallForm').prop('action', `/admin/edit-stall?stallId=${$(this).attr('stallId')}`)
				$('#editStallForm').attr('stallId', `${$(this).attr('stallId')}`)
				$('#editStallModal').modal('show');
			})
			$('#editStallForm').validate({
				rules:{
					stallId:{
						required: true,
						minlength: 3,
						remote: {
							url: '/admin/stall-id-check',
							type: 'POST',
							data: {
								stallId: function(){
									return $('#editStallForm input[name="stallId"]').val()
								},
								originalStallId: function(){
									return $('#editStallForm').attr('stallId')
								}
							},
						}
					}
				},
				messages:{
					stallId:{
						remote: function(){
							return `Stall ${$('#editStallForm input[name="stallId"]').val()} already exists on the database`
						}
					}
				}
			})
			$('#editStallModal').on('bs.modal.hidden', function(){
				$('#editStallFood').prop('checked',false)
				$('#editStallDry').prop('checked',false)
			})
			$(document).on('click', '.remove', function(){
				const clicked = $(this).attr('stallId')
				swal({
					title: 'Are you sure?',
					type: 'question',
					showCancelButton: true,
					confirmButtonText: 'Yes',
					cancelButtonText: 'No',
					confirmButtonColor: '#4fbf41',
					cancelButtonColor: '#bf4141'
				}).then(value => {
					if(value){
						$.post('/admin/delete-stall', {id: clicked}).done(function(){
							location.href='/admin/stall'
						})
					}
				})
			})
			var stalls = !{JSON.stringify(stalls)}
			console.log(stalls)
			var canvas = new fabric.Canvas('c');
			//- canvas.setBackgroundImage('http://lorempixel.com/400/400/fashion', canvas.renderAll.bind(canvas));
			//- $("#text").on("click", function(e) {
			//- text = new fabric.Text($("#text").val(), { left: 100, top: 100 });
			//- 	canvas.add(text);
			//- });
			$("#rect").on("click", function(e) {
				swal({
				title: 'Enter stall ID',
				input: 'text',
				inputAttributes: {
					autocapitalize: 'off'
				},
				showCancelButton: true,
				confirmButtonText: 'Confirm',
				showLoaderOnConfirm: true,
				}).then((results)=>{
					console.log(results)
					rect = new fabric.Rect({
					left: 180,
					top: 180,
					width: 50,
					height: 50,      
					fill: 'green',
					stroke: 'green',
					strokeWidth: 5,
					});  
					var text = new fabric.Text(`${results}`, {
					left: 208,
					top: 205,
					width: 50,
					height: 50,  
					fontSize: 15,
					originX: 'center',
					originY: 'center'
					});
					var group = new fabric.Group([ rect, text ], {
					left: 180,
					top: 180,
					width: 50,
					height: 50,  
					angle: 0,
					selectable: true
					});
					canvas.add(group);
				})

			});


			
			for(let i = 0 ; i < stalls.length ; i++){
			let x = parseInt(stalls[i].int_x)
			let y = parseInt(stalls[i].int_y)
			rect = new fabric.Rect({
				left: x,
				top: y,
				width: 50,
				height: 50,      
				fill: 'green',
				stroke: 'green',
				strokeWidth: 5,
			}); 
			var text = new fabric.Text(`${stalls[i].strId}`, {
			left: x + 28,
			top: y + 25,
			width: 50,
			height: 50,  
			fontSize: 15,
			originX: 'center',
			originY: 'center'
			});

			var group = new fabric.Group([ rect, text ], {
			left: x,
			top: y,
			width: 50,
			height: 50,  
			angle: 0,
			selectable: true
			});

			canvas.add(group);
			}


			//- $("#save").on("click", function(e) {
			//- 	$(".save").html(canvas.toSVG());
			//- });

		})
